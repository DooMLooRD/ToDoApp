// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Model;

namespace WebApi.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    [Migration("20190703080120_parentClientSetNull")]
    partial class parentClientSetNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Model.Person", b =>
                {
                    b.Property<string>("Pesel")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Pesel");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WebApi.Model.Todo", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsDone");

                    b.Property<int?>("ParentId");

                    b.Property<string>("PersonId");

                    b.Property<string>("Title");

                    b.HasKey("TodoId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PersonId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("WebApi.Model.Todo", b =>
                {
                    b.HasOne("WebApi.Model.Todo", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("WebApi.Model.Person", "Person")
                        .WithMany("Todos")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
